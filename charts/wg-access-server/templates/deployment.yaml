{{- $fullName := include "wg-access-server.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wg-access-server.fullname" . }}
  labels:
    {{- include "wg-access-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    {{- if .Values.persistence.enabled  }}
    type: {{ .Values.strategy.type | default "Recreate" | quote }}
    {{- else }}
    type: {{ .Values.strategy.type | default "RollingUpdate" | quote }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "wg-access-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml" ) . | sha256sum }}
      labels:
        {{- include "wg-access-server.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if or (or .Values.secretConfig.config .Values.secretConfig.existingSecret) (.Values.initContainers)}}
      initContainers:
    {{- end }}
      {{- if or .Values.secretConfig.config .Values.secretConfig.existingSecret }}
        - name: merge-config
          image: mikefarah/yq
          command: ["sh", "-c", "yq '. *= load(\"/secret-config.yaml\")' /configmap-config.yaml > /merged-config/config.yaml "]
          volumeMounts:
            - mountPath: /merged-config
              name: merged-config
            - mountPath: /configmap-config.yaml
              subPath: config.yaml
              name: configmap-config
            - mountPath: /secret-config.yaml
              subPath: config.yaml
              name: secret-config
      {{- end }}
      {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            capabilities:
              add: ['NET_ADMIN']
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: wireguard
              containerPort: {{ .Values.wireguard.service.port }}
              protocol: UDP
          env:
            - name: WG_WIREGUARD_PORT
              value: {{ .Values.wireguard.service.port | quote }}
            - name: WG_WIREGUARD_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "wg-access-server.wireguardConfigSecretName" . | quote }}
                  key: {{ .Values.wireguard.config.secretRefKeys.privateKey }}
            {{- if .Values.web.config.basicAuthEnabled }}
            - name: WG_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "wg-access-server.webConfigSecretName" . | quote }}
                  key: {{ .Values.web.config.secretRefKeys.adminUsername }}
            - name: WG_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wg-access-server.webConfigSecretName" . | quote }}
                  key: {{ .Values.web.config.secretRefKeys.adminPassword }}
            {{- end }}
            - name: WG_STORAGE
              {{- if .Values.storage.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "wg-access-server.storageConnectionSecretName" . | quote }}
                  key: {{ .Values.storage.secretRefKeys.uri }}
              {{- else}}
              value: "sqlite3:///data/db.sqlite3"
              {{- end }}
            - name: WG_CONFIG
              value: "/config.yaml"
          volumeMounts:
            - name: tun
              mountPath: /dev/net/tun
            {{- if not .Values.storage.enabled }}
            - name: data
              mountPath: /data
            {{- end }}
            - name: {{ if or .Values.secretConfig.config .Values.secretConfig.existingSecret }}merged-config{{ else }}configmap-config{{ end }}
              mountPath: /config.yaml
              subPath: config.yaml
          {{- with .Values.extraVolumeMounts }}
            {{- tpl ( . | toYaml ) $ | nindent 12 }}
          {{- end}}
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: tun
          hostPath:
            type: 'CharDevice'
            path: /dev/net/tun
      {{- if not .Values.storage.enabled }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ $fullName }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- end }}
        - name: configmap-config
          configMap:
            name: "{{ $fullName }}"
        - name: secret-config
          secret:
            secretName: {{ include "wg-access-server.secretConfigSecretName" . | quote }}
            items:
              - key: {{ .Values.secretConfig.secretRefKeys.config }}
                path: config.yaml
        - name: merged-config
          emptyDir: {}
      {{- with .Values.extraVolumes }}
        {{- tpl ( . | toYaml ) $ | nindent 8 }}
      {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
